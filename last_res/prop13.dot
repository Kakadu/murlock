digraph X {
legend [shape=box,label="LEGEND:\n__[a-z][a-z0-9] are MetaVars\n[a-z][a-z0-9] are SubjVars or LogVars\n[A-Z] are names of Predicates or FuncSymbols\n&=AND, OR, !=NOT is negotiation\n=> implication, == equevalence\nALL - quantifier of generality, EXZ is auantifier of existence"];	32 [label="Proving succeded"]
	32 -> 0
	31 [label="axiom"]
	30 [label="axiom"]
	29 [shape=record,label="{<seq> r, q --\>r, p |<lastfip>  }"];
	29 -> 30 [label=""]
	28 [shape=record,label="{<seq> p, q --\>r, p |<lastfip>  }"];
	28 -> 31 [label=""]
	27 [label="axiom"]
	26 [label="axiom"]
	25 [shape=record,label="{<seq> q, p OR r --\>p, q |<lastfip>  }"];
	25 -> 26 [label=""]
	24 [shape=record,label="{<seq> p, p OR r --\>p, q |<lastfip>  }"];
	24 -> 27 [label=""]
	23 [label="axiom"]
	22 [shape=record,label="{<seq> q, p OR r --\>p, r |<lastfip> p OR r --\> }"];
	22 -> 29 [label="OR->"]
	22 -> 28 [label="OR->"]
	21 [shape=record,label="{<seq> p, p OR r --\>p, r |<lastfip>  }"];
	21 -> 23 [label=""]
	20 [label="axiom"]
	19 [shape=record,label="{<seq> r, q --\>q, p |<lastfip>  }"];
	19 -> 20 [label=""]
	18 [label="axiom"]
	17 [shape=record,label="{<seq> r, q --\>r, p |<lastfip>  }"];
	17 -> 18 [label=""]
	16 [label="axiom"]
	15 [shape=record,label="{<seq> q & r --\>p, r |<lastfip> q & r --\> }"];
	15 -> 17 [label="&->"]
	14 [shape=record,label="{<seq> p --\>p, r |<lastfip>  }"];
	14 -> 16 [label=""]
	13 [label="axiom"]
	12 [shape=record,label="{<seq> q & r --\>p, q |<lastfip> q & r --\> }"];
	12 -> 19 [label="&->"]
	11 [shape=record,label="{<seq> p --\>p, q |<lastfip>  }"];
	11 -> 13 [label=""]
	10 [shape=record,label="{<seq> p OR q, p OR r --\>r, p |<lastfip> p OR q --\> }"];
	10 -> 22 [label="OR->"]
	10 -> 21 [label="OR->"]
	9 [shape=record,label="{<seq> p OR q, p OR r --\>q, p |<lastfip> p OR q --\> }"];
	9 -> 25 [label="OR->"]
	9 -> 24 [label="OR->"]
	8 [shape=record,label="{<seq> p OR r, p OR q --\>p, q & r |<lastfip> --\> q & r }"];
	8 -> 10 [label="->&"]
	8 -> 9 [label="->&"]
	7 [shape=record,label="{<seq> p OR (q & r) --\>q, p |<lastfip> p OR (q & r) --\> }"];
	7 -> 12 [label="OR->"]
	7 -> 11 [label="OR->"]
	6 [shape=record,label="{<seq> p OR (q & r) --\>r, p |<lastfip> p OR (q & r) --\> }"];
	6 -> 15 [label="OR->"]
	6 -> 14 [label="OR->"]
	5 [shape=record,label="{<seq> p OR (q & r) --\>p OR r |<lastfip> --\> p OR r }"];
	5 -> 6 [label="->OR"]
	4 [shape=record,label="{<seq> p OR (q & r) --\>p OR q |<lastfip> --\> p OR q }"];
	4 -> 7 [label="->OR"]
	3 [shape=record,label="{<seq> (p OR q) & (p OR r) --\>p, q & r |<lastfip> (p OR q) & (p OR r) --\> }"];
	3 -> 8 [label="&->"]
	2 [shape=record,label="{<seq> (p OR q) & (p OR r) --\>p OR (q & r) |<lastfip> --\> p OR (q & r) }"];
	2 -> 3 [label="->OR"]
	1 [shape=record,label="{<seq> p OR (q & r) --\>(p OR q) & (p OR r) |<lastfip> --\> (p OR q) & (p OR r) }"];
	1 -> 5 [label="->&"]
	1 -> 4 [label="->&"]
	0 [shape=record,label="{<seq>  --\>(p OR (q & r)) == ((p OR q) & (p OR r)) |<lastfip> --\> (p OR (q & r)) == ((p OR q) & (p OR r)) }"];
	0 -> 2 [label="->=="]
	0 -> 1 [label="->=="]
}
